import React, { useState } from 'react';
import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { 
  Upload, Shield, CheckCircle, Clock, AlertTriangle,
  Award, ChevronRight, Lock, BarChart, FileText 
} from 'lucide-react';

const DataSubmission = () => {
  const [activeSubmissions, setActiveSubmissions] = useState([
    {
      id: 1,
      campaign: "Health Metrics",
      status: "verifying",
      progress: 65,
      reward: 50,
      timeRemaining: "2 min"
    },
    {
      id: 2,
      campaign: "Shopping Receipts",
      status: "completed",
      progress: 100,
      reward: 30,
      timeRemaining: "0 min"
    }
  ]);

  const [verificationSteps, setVerificationSteps] = useState([
    { name: "Format Check", status: "completed" },
    { name: "Data Quality", status: "in-progress" },
    { name: "Privacy Verification", status: "pending" },
    { name: "Consensus Check", status: "pending" }
  ]);

  const getStatusColor = (status) => {
    switch(status) {
      case "completed": return "text-green-500";
      case "verifying": return "text-blue-500";
      case "failed": return "text-red-500";
      default: return "text-gray-500";
    }
  };

  const getStatusIcon = (status) => {
    switch(status) {
      case "completed": return CheckCircle;
      case "verifying": return Clock;
      case "failed": return AlertTriangle;
      default: return Clock;
    }
  };

  const RewardTracker = () => (
    <Card className="mb-6">
      <CardHeader>
        <CardTitle className="text-xl">Your Rewards</CardTitle>
      </CardHeader>
      <CardContent>
        <div className="grid grid-cols-3 gap-4">
          <div className="p-4 bg-blue-50 rounded-lg">
            <div className="flex items-center gap-2 mb-2">
              <Award className="w-5 h-5 text-blue-500" />
              <span className="font-semibold">Total Earned</span>
            </div>
            <p className="text-2xl font-bold">680 tokens</p>
          </div>
          <div className="p-4 bg-green-50 rounded-lg">
            <div className="flex items-center gap-2 mb-2">
              <BarChart className="w-5 h-5 text-green-500" />
              <span className="font-semibold">Success Rate</span>
            </div>
            <p className="text-2xl font-bold">95%</p>
          </div>
          <div className="p-4 bg-purple-50 rounded-lg">
            <div className="flex items-center gap-2 mb-2">
              <FileText className="w-5 h-5 text-purple-500" />
              <span className="font-semibold">Submissions</span>
            </div>
            <p className="text-2xl font-bold">24</p>
          </div>
        </div>
      </CardContent>
    </Card>
  );

  const VerificationProgress = () => (
    <div className="mb-6">
      <h3 className="font-semibold mb-4">Verification Progress</h3>
      <div className="space-y-4">
        {verificationSteps.map((step, index) => (
          <div key={index} className="flex items-center gap-4">
            <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
              step.status === 'completed' ? 'bg-green-500' :
              step.status === 'in-progress' ? 'bg-blue-500' :
              'bg-gray-200'
            }`}>
              {step.status === 'completed' ? (
                <CheckCircle className="w-5 h-5 text-white" />
              ) : step.status === 'in-progress' ? (
                <Clock className="w-5 h-5 text-white" />
              ) : (
                <div className="w-3 h-3 rounded-full bg-gray-400" />
              )}
            </div>
            <div className="flex-1">
              <div className="flex items-center justify-between">
                <span className="font-medium">{step.name}</span>
                <span className="text-sm text-gray-500 capitalize">{step.status}</span>
              </div>
              <div className="w-full h-2 bg-gray-100 rounded-full mt-2">
                <div className={`h-full rounded-full ${
                  step.status === 'completed' ? 'bg-green-500 w-full' :
                  step.status === 'in-progress' ? 'bg-blue-500 w-1/2' :
                  'w-0'
                }`} />
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );

  const DataUploader = () => (
    <div className="border-2 border-dashed rounded-lg p-8 text-center">
      <Upload className="w-12 h-12 mx-auto mb-4 text-gray-400" />
      <h3 className="font-semibold mb-2">Upload Your Data</h3>
      <p className="text-gray-500 mb-4">Drag and drop your files here or click to browse</p>
      <div className="flex justify-center gap-4">
        <Button className="flex items-center gap-2">
          <Lock className="w-4 h-4" />
          Secure Upload
        </Button>
        <Button variant="outline">
          View Guidelines
        </Button>
      </div>
    </div>
  );

  const ActiveSubmissions = () => (
    <div className="mt-8">
      <h3 className="font-semibold mb-4">Active Submissions</h3>
      <div className="space-y-4">
        {activeSubmissions.map((submission) => {
          const StatusIcon = getStatusIcon(submission.status);
          return (
            <Card key={submission.id}>
              <CardContent className="p-4">
                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-3">
                    <StatusIcon className={`w-5 h-5 ${getStatusColor(submission.status)}`} />
                    <div>
                      <h4 className="font-medium">{submission.campaign}</h4>
                      <p className="text-sm text-gray-500">
                        {submission.status === "completed" ? 
                          "Verification complete" : 
                          `${submission.timeRemaining} remaining`}
                      </p>
                    </div>
                  </div>
                  <div className="flex items-center gap-4">
                    <div className="flex items-center gap-2">
                      <Award className="w-5 h-5 text-yellow-500" />
                      <span>{submission.reward} tokens</span>
                    </div>
                    <Button variant="ghost" size="sm">
                      <ChevronRight className="w-4 h-4" />
                    </Button>
                  </div>
                </div>
                {submission.status === "verifying" && (
                  <div className="mt-4">
                    <div className="w-full h-2 bg-gray-100 rounded-full">
                      <div 
                        className="h-full bg-blue-500 rounded-full transition-all duration-500"
                        style={{ width: `${submission.progress}%` }}
                      />
                    </div>
                  </div>
                )}
              </CardContent>
            </Card>
          );
        })}
      </div>
    </div>
  );

  return (
    <div className="max-w-4xl mx-auto p-6">
      <RewardTracker />
      
      <div className="grid grid-cols-2 gap-6">
        <div>
          <Card>
            <CardHeader>
              <CardTitle>Submit Data</CardTitle>
            </CardHeader>
            <CardContent>
              <DataUploader />
              <ActiveSubmissions />
            </CardContent>
          </Card>
        </div>
        
        <div>
          <Card>
            <CardHeader>
              <CardTitle>Verification Status</CardTitle>
            </CardHeader>
            <CardContent>
              <VerificationProgress />
              
              <div className="p-4 bg-blue-50 rounded-lg">
                <div className="flex items-center gap-2 mb-2">
                  <Shield className="w-5 h-5 text-blue-500" />
                  <h3 className="font-semibold">Privacy Protection</h3>
                </div>
                <p className="text-sm text-gray-600">
                  Your data is being processed with end-to-end encryption and zero-knowledge proofs.
                  Personal information is automatically redacted before verification.
                </p>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
};

export default DataSubmission;
